window.onload = (() => { var e = new FontFaceObserver("ArefRuqaa"), t = new FontFaceObserver("WebNastaliq"), n = null, a = null, o = (a = document.getElementById("prediction-container"), document.getElementById("canvas")), l = o.getContext("2d"); l.font = "40px ArefRuqaa"; var i = ["أ", "ب", "ت", "ث", "ج", "ح", "خ", "د", "ذ", "ر", "ز", "س", "ش", "ص", "ض", "ط", "ظ", "ع", "غ", "ف", "ق", "ك", "ل", "م", "ن", "ه", "و", "ي"], d = ["30px", "40px", "50px", "60px", "70px"], r = ["ArefRuqaa", "WebNastaliq"]; function c() { Promise.all([e.load(), t.load()]).then(m, function (n) { console.log(n, "Error loading fonts, trying again..."), Promise.all([e.load(), t.load()]).then(m, function (e) { document.getElementById("loading-fonts-text").classList.add("error"), console.log(e) }) }) } function m() { document.getElementById("loading-fonts-text").classList.remove("error"), g(document.getElementById("input-text").value), document.querySelectorAll("#sample-images-container img").forEach(function (e) { e.addEventListener("click", function () { u(e) }) }), document.getElementById("upload-image").addEventListener("input", function () { if (this.files && this.files[0]) { let e = document.createElement("img"); e.width = 100, e.height = 100, e.src = URL.createObjectURL(this.files[0]), e.onload = (() => u(e)) } }), document.getElementById("synthesize-btn").addEventListener("click", function () { l.fillStyle = "white", l.fillRect(0, 0, 100, 100); let e = document.getElementById("input-text").value, t = document.getElementById("font-select").value, n = "ArefRuqaa"; switch (t) { case "ruqaa": n = "ArefRuqaa"; break; case "farsi": n = "WebNastaliq"; break; default: n = "ArefRuqaa" }let a = s(48) + 1, o = () => (s(26) + 75) / 100, c = s(5) + 3, m = (s(2) + 3) / 100, g = () => s(5), u = (s(26), () => s(51) + 25); randomBgImg = document.createElement("img"), randomBgImg.src = "./imgs/bgs/bg" + a + ".jpg", randomBgImg.width = 100, randomBgImg.height = 100, randomBgImg.onload = (() => { if (l.globalAlpha = o(), l.drawImage(randomBgImg, 0, 0, 100, 100), a <= 15) { let e = ""; for (let t = 0; t <= c; t++)e += i[s(28)]; l.fillStyle = "black", l.globalAlpha = m, l.font = d[g()] + " " + r[(() => s(2))()], l.fillText(e, u(), u()) } l.globalAlpha = 1, l.font = d[g()] + " " + n, l.fillStyle = "rgba(0, 0, 0, " + o() + ")", l.fillText(e, u(), u()) }) }), document.getElementById("font-select").addEventListener("input", function () { g(document.getElementById("input-text").value) }), document.getElementById("predict-btn").addEventListener("click", function () { let e = o.toDataURL("image/jpeg").replace("image/jpeg", "image/octet-stream"), t = document.createElement("img"); t.src = e, t.width = 100, t.height = 100, t.onload = (() => u(t)) }), document.getElementById("input-text").oninput = function (e) { g(e.target.value) } } function g(e) { l.fillStyle = "white", l.fillRect(0, 0, 100, 100), l.fillStyle = "rgba(0, 0, 0, 1)"; let t = "ArefRuqaa"; switch (document.getElementById("font-select").value) { case "ruqaa": t = "ArefRuqaa"; break; case "farsi": t = "WebNastaliq"; break; default: t = "ArefRuqaa" }l.font = "40px " + t, l.textAlign = "center", l.fillText(e, 50, 60) } function s(e) { return Math.floor(Math.random() * Math.floor(e)) } function u(e) { function t() { l.drawImage(e, 0, 0, 100, 100); let t = o.toDataURL("image/jpeg").replace("image/jpeg", "image/octet-stream"), i = document.createElement("img"); i.width = 100, i.height = 100, i.src = t, i.onload = (() => { imgtensor = tf.browser.fromPixels(i).mean(2).toFloat().expandDims(-1), imgtensor = tf.image.resizeNearestNeighbor(imgtensor, [100, 100]), imgtensor = imgtensor.reshape([1, 100, 100, 1]), imgds = tf.data.array([imgtensor]), imgds = imgds.batch(1), n.predict(imgtensor).data().then(e => { document.querySelector(".prediction-container-wrapper .prediction-icon svg").classList.remove("predict"), a.innerHTML = parseFloat(e.toString()) > .5 ? "رقعة" : "نستعليق (فارسي)" }) }) } a.innerHTML = " ", document.querySelector(".prediction-container-wrapper .prediction-icon svg").classList.add("predict"), null == n ? (document.getElementById("loading-model-text").innerText = "جاري تحميل النموذج...", tf.loadLayersModel("./model/model.json").then(e => { n = e, document.getElementById("loading-model-text").classList.add("success"), document.getElementById("loading-model-text").innerText = "تم التحميل", setTimeout(() => document.getElementById("loading-model-text").classList.add("hidden"), 1500), console.log("model loaded") })).then(() => { t() }) : t() } document.getElementById("retry-loading-fonts").addEventListener("click", c), c() });